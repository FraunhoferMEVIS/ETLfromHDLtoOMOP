DBMS:
postgresql

Error:
org.postgresql.util.PSQLException: FEHLER: Spalte »source_value« existiert nicht
  Position: 46

SQL:
select  'Condition' as domain,
        COUNT(source_value) as n_codes_source,
        sum(is_mapped) as n_codes_mapped,
        100.0*sum(is_mapped) / COUNT(*) as p_codes_mapped,
        sum(num_records) as n_records_source,
        sum(case when is_mapped > 0 then num_records else 0 end) as n_records_mapped,
        100.0*sum(case when is_mapped > 0 then num_records else 0 end)/sum(num_records) as p_records_mapped
from
(
select condition_source_value, case when condition_concept_id > 0 then 1 else 0 end as is_mapped, COUNT(*) as num_records
from OMOP_format1.condition_occurrence
group by condition_source_value, case when condition_concept_id > 0 then 1 else 0 end
) T
union
select 'Procedure', COUNT(*),
        sum(is_mapped),
        100.0*sum(is_mapped) / COUNT(*),
        sum(num_records),
        sum(case when is_mapped > 0 then num_records else 0 end),
        100.0*sum(case when is_mapped > 0 then num_records else 0 end)/sum(num_records)
from
(
select procedure_source_value, case when procedure_concept_id > 0 then 1 else 0 end as is_mapped, COUNT(*) as num_records
from OMOP_format1.procedure_occurrence
group by procedure_source_value, case when procedure_concept_id > 0 then 1 else 0 end
) T
union
select 'Device', COUNT(*),
        sum(is_mapped),
        100.0*sum(is_mapped) / COUNT(*),
        sum(num_records),
        sum(case when is_mapped > 0 then num_records else 0 end),
        100.0*sum(case when is_mapped > 0 then num_records else 0 end)/sum(num_records)
from
(
select device_source_value, case when device_concept_id > 0 then 1 else 0 end as is_mapped, COUNT(*) as num_records
from OMOP_format1.device_exposure
group by device_source_value, case when device_concept_id > 0 then 1 else 0 end
) T
union
select 'Drug', COUNT(*),
        sum(is_mapped),
        100.0*sum(is_mapped) / COUNT(*),
        sum(num_records),
        sum(case when is_mapped > 0 then num_records else 0 end),
        100.0*sum(case when is_mapped > 0 then num_records else 0 end)/sum(num_records)
from
(
select drug_source_value, case when drug_concept_id > 0 then 1 else 0 end as is_mapped, COUNT(*) as num_records
from OMOP_format1.drug_exposure
group by drug_source_value, case when drug_concept_id > 0 then 1 else 0 end
) T
union
select 'Observation', COUNT(*),
        sum(is_mapped),
        100.0*sum(is_mapped) / COUNT(*),
        sum(num_records),
        sum(case when is_mapped > 0 then num_records else 0 end),
        100.0*sum(case when is_mapped > 0 then num_records else 0 end)/sum(num_records)
from
(
select observation_source_value, case when observation_concept_id > 0 then 1 else 0 end as is_mapped, COUNT(*) as num_records
from OMOP_format1.observation
group by observation_source_value, case when observation_concept_id > 0 then 1 else 0 end
) T
union
select 'Measurement', COUNT(*),
        sum(is_mapped),
        100.0*sum(is_mapped) / COUNT(*),
        sum(num_records),
        sum(case when is_mapped > 0 then num_records else 0 end),
        100.0*sum(case when is_mapped > 0 then num_records else 0 end)/sum(num_records)
from
(
select measurement_source_value, case when measurement_concept_id > 0 then 1 else 0 end as is_mapped, COUNT(*) as num_records
from OMOP_format1.measurement
group by measurement_source_value, case when measurement_concept_id > 0 then 1 else 0 end
) T
union
select 'Visit', COUNT(*),
        sum(is_mapped),
        100.0*sum(is_mapped) / COUNT(*),
        sum(num_records),
        sum(case when is_mapped > 0 then num_records else 0 end),
        100.0*sum(case when is_mapped > 0 then num_records else 0 end)/sum(num_records)
from
(
select visit_source_value, case when visit_concept_id > 0 then 1 else 0 end as is_mapped, COUNT(*) as num_records
from OMOP_format1.visit_occurrence
group by visit_source_value, case when visit_concept_id > 0 then 1 else 0 end
) T
union
select 'Measurement unit', COUNT(*),
      sum(is_mapped),
      100.0*sum(is_mapped) / COUNT(*),
      sum(num_records),
      sum(case when is_mapped > 0 then num_records else 0 end),
      100.0*sum(case when is_mapped > 0 then num_records else 0 end)/sum(num_records)
from
(
   select unit_source_value, case when unit_concept_id > 0 then 1 else 0 end as is_mapped, COUNT(*) as num_records
   from OMOP_format1.measurement
   where unit_concept_id IS NOT NULL
   group by unit_source_value, case when unit_concept_id > 0 then 1 else 0 end
) T
union
select 'Observation unit', COUNT(*),
      sum(is_mapped),
      100.0*sum(is_mapped) / COUNT(*),
      sum(num_records),
      sum(case when is_mapped > 0 then num_records else 0 end),
      100.0*sum(case when is_mapped > 0 then num_records else 0 end)/sum(num_records)
from
(
   select unit_source_value, case when unit_concept_id > 0 then 1 else 0 end as is_mapped, COUNT(*) as num_records
   from OMOP_format1.observation
   where unit_concept_id IS NOT NULL
   group by unit_source_value, case when unit_concept_id > 0 then 1 else 0 end
) T
union
select 'Measurement value', COUNT(*),
      sum(is_mapped),
      100.0*sum(is_mapped) / COUNT(*),
      sum(num_records),
      sum(case when is_mapped > 0 then num_records else 0 end),
      100.0*sum(case when is_mapped > 0 then num_records else 0 end)/sum(num_records)
from
(
   select value_source_value, case when value_as_concept_id > 0 then 1 else 0 end as is_mapped, COUNT(*) as num_records
   from OMOP_format1.measurement
   where value_as_concept_id IS NOT NULL
   group by value_source_value, case when value_as_concept_id > 0 then 1 else 0 end
) T
union
select 'Observation value', COUNT(*),
      sum(is_mapped),
      100.0*sum(is_mapped) / COUNT(*),
      sum(num_records),
      sum(case when is_mapped > 0 then num_records else 0 end),
      100.0*sum(case when is_mapped > 0 then num_records else 0 end)/sum(num_records)
from
(
   select '', case when value_as_concept_id > 0 then 1 else 0 end as is_mapped, COUNT(*) as num_records
   from OMOP_format1.observation
   where value_as_concept_id IS NOT NULL
   group by case when value_as_concept_id > 0 then 1 else 0 end
) T
union
select 'Provider Specialty', COUNT(*),
      sum(is_mapped),
      100.0*sum(is_mapped) / COUNT(*),
      sum(num_records),
      sum(case when is_mapped > 0 then num_records else 0 end),
      100.0*sum(case when is_mapped > 0 then num_records else 0 end)/sum(num_records)
from
(
   select specialty_source_value, case when specialty_concept_id > 0 then 1 else 0 end as is_mapped, COUNT(*) as num_records
   from OMOP_format1.provider
   where specialty_concept_id IS NOT NULL
   group by specialty_source_value, case when specialty_concept_id > 0 then 1 else 0 end
) T
union
select 'Specimen', COUNT(*),
      sum(is_mapped),
      100.0*sum(is_mapped) / COUNT(*),
      sum(num_records),
      sum(case when is_mapped > 0 then num_records else 0 end),
      100.0*sum(case when is_mapped > 0 then num_records else 0 end)/sum(num_records)
from
(
   select specimen_source_value, case when specimen_concept_id > 0 then 1 else 0 end as is_mapped, COUNT(*) as num_records
   from OMOP_format1.specimen
   where specimen_concept_id IS NOT NULL
   group by specimen_source_value, case when specimen_concept_id > 0 then 1 else 0 end
) T
union
select 'Death cause', COUNT(*),
      sum(is_mapped),
      100.0*sum(is_mapped) / COUNT(*),
      sum(num_records),
      sum(case when is_mapped > 0 then num_records else 0 end),
      100.0*sum(case when is_mapped > 0 then num_records else 0 end)/sum(num_records)
from
(
   select cause_source_value, case when cause_concept_id > 0 then 1 else 0 end as is_mapped, COUNT(*) as num_records
   from OMOP_format1.death
   where cause_concept_id IS NOT NULL
   group by cause_source_value, case when cause_concept_id > 0 then 1 else 0 end
) T
union
select 'Condition status', COUNT(*),
      sum(is_mapped),
      100.0*sum(is_mapped) / COUNT(*),
      sum(num_records),
      sum(case when is_mapped > 0 then num_records else 0 end),
      100.0*sum(case when is_mapped > 0 then num_records else 0 end)/sum(num_records)
from
(
   select condition_status_source_value, case when condition_status_concept_id > 0 then 1 else 0 end as is_mapped, COUNT(*) as num_records
   from OMOP_format1.condition_occurrence
   where condition_status_concept_id IS NOT NULL
   group by condition_status_source_value, case when condition_status_concept_id > 0 then 1 else 0 end
) T


R version:
R version 4.2.3 (2023-03-15 ucrt)

Platform:
x86_64-w64-mingw32

Attached base packages:
- stats
- graphics
- grDevices
- utils
- datasets
- methods
- base

Other attached packages:
- CdmInspection (1.2.0)
- SqlRender (1.15.0)
- ParallelLogger (3.3.0)
- ROhdsiWebApi (1.3.3)
- Achilles (1.7)
- DatabaseConnector (6.1.0)